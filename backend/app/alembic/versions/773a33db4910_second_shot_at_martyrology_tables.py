"""
second shot at martyrology tables.

Revision ID: 773a33db4910
Revises: cb17e78c4ee8
Create Date: 2021-02-25 10:26:44.563925
"""
import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision = "773a33db4910"
down_revision = "cb17e78c4ee8"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("ix_block_id", table_name="block")
    op.drop_index("ix_block_rubrics", table_name="block")
    op.drop_index("ix_block_title", table_name="block")
    op.drop_table("block")
    op.drop_index("ix_thing_id", table_name="thing")
    op.drop_table("thing")

    op.create_table(
        "datetable",
        sa.Column(
            "id", sa.INTEGER(), primary_key=True, autoincrement=True, nullable=False
        ),
        sa.Column("calendar_date", sa.VARCHAR(), index=True),
    )

    op.create_table(
        "line_association_table",
        sa.Column(
            "martyrology_id",
            sa.INTEGER(),
            sa.ForeignKey("martyrology.id"),
            primary_key=True,
        ),
        sa.Column(
            "martyrology_line_id",
            sa.INTEGER(),
            sa.ForeignKey("martyrologyline.id"),
            primary_key=True,
        ),
    )

    op.create_table(
        "date_association_table",
        sa.Column(
            "date_id", sa.INTEGER(), sa.ForeignKey("datetable.id"), primary_key=True
        ),
        sa.Column(
            "martyrology_id",
            sa.INTEGER(),
            sa.ForeignKey("martyrology.id"),
            primary_key=True,
        ),
    )

    op.create_foreign_key(
        None, "date_association_table", "martyrology", ["martyrology_id"], ["id"]
    )
    op.create_foreign_key(
        None, "line_association_table", "martyrology", ["martyrology_id"], ["id"]
    )
    op.create_foreign_key(
        None,
        "line_association_table",
        "martyrologyline",
        ["martyrologyline_id"],
        ["id"],
    )
    op.alter_column("user", "email", existing_type=sa.VARCHAR(), nullable=False)
    op.alter_column(
        "user", "hashed_password", existing_type=sa.VARCHAR(), nullable=False
    )
    op.drop_column("user", "roles")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "user", sa.Column("roles", sa.VARCHAR(), autoincrement=False, nullable=True)
    )
    op.alter_column(
        "user", "hashed_password", existing_type=sa.VARCHAR(), nullable=True
    )
    op.alter_column("user", "email", existing_type=sa.VARCHAR(), nullable=True)
    op.drop_constraint(None, "line_association_table", type_="foreignkey")
    op.drop_constraint(None, "line_association_table", type_="foreignkey")
    op.drop_constraint(None, "date_association_table", type_="foreignkey")
    op.create_table(
        "thing",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.PrimaryKeyConstraint("id", name="thing_pkey"),
    )
    op.create_index("ix_thing_id", "thing", ["id"], unique=False)
    op.create_table(
        "block",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("title", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("rubrics", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("id", name="block_pkey"),
    )
    op.create_index("ix_block_title", "block", ["title"], unique=False)
    op.create_index("ix_block_rubrics", "block", ["rubrics"], unique=False)
    op.create_index("ix_block_id", "block", ["id"], unique=False)
    op.drop_table("datetable")
    op.drop_table("line_association_table")
    op.drop_table("date_association_table")
    # ### end Alembic commands ###
